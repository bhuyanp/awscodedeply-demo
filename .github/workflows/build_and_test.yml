name: Build and Test with Maven

on:
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

jobs:
  maven-build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: "17"
          distribution: "temurin"
          cache: maven
      - name: Build with Maven
        run: mvn -B package --file pom.xml
      - name: Copy jar to staging
        run: mkdir staging && cp target/sample*.jar staging
      - name: Copy Dockerfile to staging
        run: cp Dockerfile staging

      - name: Upload artifact from staging
        uses: actions/upload-artifact@v3
        with:
          name: my-artifact
          path: staging/*

  docker-build:
    needs: maven-build
    runs-on: ubuntu-latest
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          name: my-artifact

      - name: Display structure of downloaded files
        run: ls -R

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        id: prasanta-dev
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: "true"

      - name: Build, tag, and push image to Amazon ECR
        env:
          REGISTRY: 736094578720.dkr.ecr.us-east-1.amazonaws.com
          REPOSITORY: awscodebuild-demo
          IMAGE_TAG: ${{ github.sha }}
        run: |
          echo $REGISTRY
          echo $REPOSITORY
          echo $IMAGE_TAG
          docker build -t $REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $REGISTRY/$REPOSITORY:$IMAGE_TAG
